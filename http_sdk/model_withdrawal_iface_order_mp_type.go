/*
proto/withdrawal_service/withdrawal.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package http_sdk

import (
	"encoding/json"
	"fmt"
)

// WithdrawalIfaceOrderMpType the model 'WithdrawalIfaceOrderMpType'
type WithdrawalIfaceOrderMpType string

// List of withdrawal_ifaceOrderMpType
const (
	CUSTOM WithdrawalIfaceOrderMpType = "Custom"
	TOKOPEDIA WithdrawalIfaceOrderMpType = "Tokopedia"
	SHOPEE WithdrawalIfaceOrderMpType = "Shopee"
	TIKTOK WithdrawalIfaceOrderMpType = "Tiktok"
	LAZADA WithdrawalIfaceOrderMpType = "Lazada"
	MENGANTAR WithdrawalIfaceOrderMpType = "Mengantar"
)

// All allowed values of WithdrawalIfaceOrderMpType enum
var AllowedWithdrawalIfaceOrderMpTypeEnumValues = []WithdrawalIfaceOrderMpType{
	"Custom",
	"Tokopedia",
	"Shopee",
	"Tiktok",
	"Lazada",
	"Mengantar",
}

func (v *WithdrawalIfaceOrderMpType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WithdrawalIfaceOrderMpType(value)
	for _, existing := range AllowedWithdrawalIfaceOrderMpTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WithdrawalIfaceOrderMpType", value)
}

// NewWithdrawalIfaceOrderMpTypeFromValue returns a pointer to a valid WithdrawalIfaceOrderMpType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWithdrawalIfaceOrderMpTypeFromValue(v string) (*WithdrawalIfaceOrderMpType, error) {
	ev := WithdrawalIfaceOrderMpType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WithdrawalIfaceOrderMpType: valid values are %v", v, AllowedWithdrawalIfaceOrderMpTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WithdrawalIfaceOrderMpType) IsValid() bool {
	for _, existing := range AllowedWithdrawalIfaceOrderMpTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to withdrawal_ifaceOrderMpType value
func (v WithdrawalIfaceOrderMpType) Ptr() *WithdrawalIfaceOrderMpType {
	return &v
}

type NullableWithdrawalIfaceOrderMpType struct {
	value *WithdrawalIfaceOrderMpType
	isSet bool
}

func (v NullableWithdrawalIfaceOrderMpType) Get() *WithdrawalIfaceOrderMpType {
	return v.value
}

func (v *NullableWithdrawalIfaceOrderMpType) Set(val *WithdrawalIfaceOrderMpType) {
	v.value = val
	v.isSet = true
}

func (v NullableWithdrawalIfaceOrderMpType) IsSet() bool {
	return v.isSet
}

func (v *NullableWithdrawalIfaceOrderMpType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWithdrawalIfaceOrderMpType(val *WithdrawalIfaceOrderMpType) *NullableWithdrawalIfaceOrderMpType {
	return &NullableWithdrawalIfaceOrderMpType{value: val, isSet: true}
}

func (v NullableWithdrawalIfaceOrderMpType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWithdrawalIfaceOrderMpType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

