/*
proto/withdrawal_service/withdrawal.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package http_sdk

import (
	"encoding/json"
)

// checks if the WithdrawalIfaceSubmitWdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WithdrawalIfaceSubmitWdRequest{}

// WithdrawalIfaceSubmitWdRequest struct for WithdrawalIfaceSubmitWdRequest
type WithdrawalIfaceSubmitWdRequest struct {
	TeamId *string `json:"teamId,omitempty"`
	MpId *string `json:"mpId,omitempty"`
	Source *WithdrawalIfaceImporterSource `json:"source,omitempty"`
	MpType *WithdrawalIfaceOrderMpType `json:"mpType,omitempty"`
	ResourceUri *string `json:"resourceUri,omitempty"`
}

// NewWithdrawalIfaceSubmitWdRequest instantiates a new WithdrawalIfaceSubmitWdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWithdrawalIfaceSubmitWdRequest() *WithdrawalIfaceSubmitWdRequest {
	this := WithdrawalIfaceSubmitWdRequest{}
	var source WithdrawalIfaceImporterSource = SOURCE_UNKNOWN
	this.Source = &source
	var mpType WithdrawalIfaceOrderMpType = CUSTOM
	this.MpType = &mpType
	return &this
}

// NewWithdrawalIfaceSubmitWdRequestWithDefaults instantiates a new WithdrawalIfaceSubmitWdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWithdrawalIfaceSubmitWdRequestWithDefaults() *WithdrawalIfaceSubmitWdRequest {
	this := WithdrawalIfaceSubmitWdRequest{}
	var source WithdrawalIfaceImporterSource = SOURCE_UNKNOWN
	this.Source = &source
	var mpType WithdrawalIfaceOrderMpType = CUSTOM
	this.MpType = &mpType
	return &this
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *WithdrawalIfaceSubmitWdRequest) GetTeamId() string {
	if o == nil || IsNil(o.TeamId) {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithdrawalIfaceSubmitWdRequest) GetTeamIdOk() (*string, bool) {
	if o == nil || IsNil(o.TeamId) {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *WithdrawalIfaceSubmitWdRequest) HasTeamId() bool {
	if o != nil && !IsNil(o.TeamId) {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *WithdrawalIfaceSubmitWdRequest) SetTeamId(v string) {
	o.TeamId = &v
}

// GetMpId returns the MpId field value if set, zero value otherwise.
func (o *WithdrawalIfaceSubmitWdRequest) GetMpId() string {
	if o == nil || IsNil(o.MpId) {
		var ret string
		return ret
	}
	return *o.MpId
}

// GetMpIdOk returns a tuple with the MpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithdrawalIfaceSubmitWdRequest) GetMpIdOk() (*string, bool) {
	if o == nil || IsNil(o.MpId) {
		return nil, false
	}
	return o.MpId, true
}

// HasMpId returns a boolean if a field has been set.
func (o *WithdrawalIfaceSubmitWdRequest) HasMpId() bool {
	if o != nil && !IsNil(o.MpId) {
		return true
	}

	return false
}

// SetMpId gets a reference to the given string and assigns it to the MpId field.
func (o *WithdrawalIfaceSubmitWdRequest) SetMpId(v string) {
	o.MpId = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *WithdrawalIfaceSubmitWdRequest) GetSource() WithdrawalIfaceImporterSource {
	if o == nil || IsNil(o.Source) {
		var ret WithdrawalIfaceImporterSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithdrawalIfaceSubmitWdRequest) GetSourceOk() (*WithdrawalIfaceImporterSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *WithdrawalIfaceSubmitWdRequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given WithdrawalIfaceImporterSource and assigns it to the Source field.
func (o *WithdrawalIfaceSubmitWdRequest) SetSource(v WithdrawalIfaceImporterSource) {
	o.Source = &v
}

// GetMpType returns the MpType field value if set, zero value otherwise.
func (o *WithdrawalIfaceSubmitWdRequest) GetMpType() WithdrawalIfaceOrderMpType {
	if o == nil || IsNil(o.MpType) {
		var ret WithdrawalIfaceOrderMpType
		return ret
	}
	return *o.MpType
}

// GetMpTypeOk returns a tuple with the MpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithdrawalIfaceSubmitWdRequest) GetMpTypeOk() (*WithdrawalIfaceOrderMpType, bool) {
	if o == nil || IsNil(o.MpType) {
		return nil, false
	}
	return o.MpType, true
}

// HasMpType returns a boolean if a field has been set.
func (o *WithdrawalIfaceSubmitWdRequest) HasMpType() bool {
	if o != nil && !IsNil(o.MpType) {
		return true
	}

	return false
}

// SetMpType gets a reference to the given WithdrawalIfaceOrderMpType and assigns it to the MpType field.
func (o *WithdrawalIfaceSubmitWdRequest) SetMpType(v WithdrawalIfaceOrderMpType) {
	o.MpType = &v
}

// GetResourceUri returns the ResourceUri field value if set, zero value otherwise.
func (o *WithdrawalIfaceSubmitWdRequest) GetResourceUri() string {
	if o == nil || IsNil(o.ResourceUri) {
		var ret string
		return ret
	}
	return *o.ResourceUri
}

// GetResourceUriOk returns a tuple with the ResourceUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WithdrawalIfaceSubmitWdRequest) GetResourceUriOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUri) {
		return nil, false
	}
	return o.ResourceUri, true
}

// HasResourceUri returns a boolean if a field has been set.
func (o *WithdrawalIfaceSubmitWdRequest) HasResourceUri() bool {
	if o != nil && !IsNil(o.ResourceUri) {
		return true
	}

	return false
}

// SetResourceUri gets a reference to the given string and assigns it to the ResourceUri field.
func (o *WithdrawalIfaceSubmitWdRequest) SetResourceUri(v string) {
	o.ResourceUri = &v
}

func (o WithdrawalIfaceSubmitWdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WithdrawalIfaceSubmitWdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TeamId) {
		toSerialize["teamId"] = o.TeamId
	}
	if !IsNil(o.MpId) {
		toSerialize["mpId"] = o.MpId
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.MpType) {
		toSerialize["mpType"] = o.MpType
	}
	if !IsNil(o.ResourceUri) {
		toSerialize["resourceUri"] = o.ResourceUri
	}
	return toSerialize, nil
}

type NullableWithdrawalIfaceSubmitWdRequest struct {
	value *WithdrawalIfaceSubmitWdRequest
	isSet bool
}

func (v NullableWithdrawalIfaceSubmitWdRequest) Get() *WithdrawalIfaceSubmitWdRequest {
	return v.value
}

func (v *NullableWithdrawalIfaceSubmitWdRequest) Set(val *WithdrawalIfaceSubmitWdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWithdrawalIfaceSubmitWdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWithdrawalIfaceSubmitWdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWithdrawalIfaceSubmitWdRequest(val *WithdrawalIfaceSubmitWdRequest) *NullableWithdrawalIfaceSubmitWdRequest {
	return &NullableWithdrawalIfaceSubmitWdRequest{value: val, isSet: true}
}

func (v NullableWithdrawalIfaceSubmitWdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWithdrawalIfaceSubmitWdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


